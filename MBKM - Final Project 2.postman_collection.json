{
	"info": {
		"_postman_id": "ee01b197-c89a-4b38-8d61-164256d65e0c",
		"name": "MBKM - Final Project 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31135623",
		"_collection_link": "https://crimson-star-882099.postman.co/workspace/MBKM-Final-Project-2~68237437-130b-4c66-9a06-152945108d50/collection/24368336-ee01b197-c89a-4b38-8d61-164256d65e0c?action=share&source=collection_link&creator=31135623"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get All User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code must 200\", () => {\r",
									"\t pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response body should be an object', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"users\");\r",
									"\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER_URL}}/users",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE 201\", () => {\r",
									"\tpm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test('response body should be an object', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test('PROPERTI SESUAI', () => {\r",
									"    const responsJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responsJson).to.haveOwnProperty('user');\r",
									"\r",
									"    pm.expect(responsJson.user).to.be.an('object');\r",
									"\r",
									"\tpm.expect(responsJson.user).to.haveOwnProperty(\"email\");\r",
									"\tpm.expect(responsJson.user).to.haveOwnProperty(\"full_name\");\r",
									"\tpm.expect(responsJson.user).to.haveOwnProperty(\"username\");\r",
									"\tpm.expect(responsJson.user).to.haveOwnProperty(\"profile_image_url\");\r",
									"\tpm.expect(responsJson.user).to.haveOwnProperty(\"age\");\r",
									"\tpm.expect(responsJson.user).to.haveOwnProperty(\"phone_number\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{emailRegister}}\",\r\n\t\"full_name\" : \"{{fullNameRegister}}\",\r\n\t\"username\" : \"{{usernameRegister}}\",\r\n\t\"password\" : \"{{passwordRegister}}\",\r\n\t\"profile_image_url\" : \"{{profileImageUrlRegister}}\",\r\n\t\"age\" : {{ageRegister}},\r\n\t\"phone_number\" : \"{{phoneNumberRegister}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/users/auth/register",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"users",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"RESPONSE BODY MESSAGE\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson.message).to.equals('Your account has been successfully deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/users/9697fc01-f95d-4cdb-8a71-97b3f45018e9",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"users",
								"9697fc01-f95d-4cdb-8a71-97b3f45018e9"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resJson = pm.response.json();\r",
									"pm.environment.set(\"accessToken\", resJson.token);\r",
									"\r",
									"pm.test(\"RESPONSE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET TOKEN\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson.token).to.be.an(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{emailRegister}}\",\r\n\t\"password\" : \"{{passwordRegister}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/users/auth/login",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"users",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response body should be an object', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test('PROPERTI SESUAI', () => {\r",
									"    const responsJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responsJson).to.haveOwnProperty('user');\r",
									"\r",
									"    pm.expect(responsJson.user).to.be.an('object');\r",
									"\tconst user = responsJson.user;\r",
									"\r",
									"\tpm.expect(user.email).to.equals(pm.environment.get(\"newEmail\"));\r",
									"\tpm.expect(user.full_name).to.equals(pm.environment.get(\"newFullName\"));\r",
									"\tpm.expect(user.username).to.equals(pm.environment.get(\"newUsername\"));\r",
									"\tpm.expect(user.profile_image_url).to.equals(pm.environment.get(\"newProfileImageUrl\"));\r",
									"\tpm.expect(user.age).to.equals(parseInt(pm.environment.get(\"newAge\")));\r",
									"\tpm.expect(user.phone_number).to.equals(pm.environment.get(\"newPhoneNumber\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{newEmail}}\",\r\n\t\"full_name\" : \"{{newFullName}}\",\r\n\t\"username\" : \"{{newUsername}}\",\r\n\t\"profile_image_url\" : \"{{newProfileImageUrl}}\",\r\n\t\"age\" : {{newAge}},\r\n\t\"phone_number\" : \"{{newPhoneNumber}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/users/41183c26-eaa5-49ba-a415-8cdaefb18c29",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"users",
								"41183c26-eaa5-49ba-a415-8cdaefb18c29"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Photo",
			"item": [
				{
					"name": "Get All Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"photos\");\r",
									"\r",
									"\tpm.expect(responseJson.photos).to.be.an(\"array\");\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI PHOTOS RESPONSE SESUAI, PHOTO, COMMENT, USER\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tconst photo = responseJson.photos[0];\r",
									"\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"title\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"caption\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"poster_image_url\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"UserId\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"createdAt\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"updatedAt\");\r",
									"\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"comments\");\r",
									"\tconst comments = photo.comments;\r",
									"\r",
									"\tpm.expect(comments).to.be.an(\"array\");\r",
									"\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"user\");\r",
									"\tconst user = photo.user;\r",
									"\r",
									"\tpm.expect(user).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"username\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"profile_image_url\");\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/photos",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE STATUS 201\", () => {\r",
									"\tpm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"caption\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"poster_image_url\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"title\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"UserId\");\r",
									"\r",
									"\tpm.environment.set(\"photoId\", responseJson.id);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"poster_image_url\" : \"{{posterImageUrlRequest}}\",\r\n\t\"title\" : \"{{titleRequest}}\",\r\n\t\"caption\": \"{{captionRequest}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/photos",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"RESPONSE BODY MESSAGE\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson.message).to.equals('Your photo has been successfully deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/photos/{{photoId}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"photos",
								"{{photoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE STATUS 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"photo\");\r",
									"\r",
									"\tconst photo = responseJson.photo;\r",
									"\tpm.expect(photo.id).to.equals(pm.environment.get(\"photoId\"));\r",
									"\tpm.expect(photo.title).to.equals(pm.environment.get(\"newTitle\"));\r",
									"\tpm.expect(photo.caption).to.equals(pm.environment.get(\"newCaption\"));\r",
									"\tpm.expect(photo.poster_image_url).to.equals(pm.environment.get(\"newPosterImageUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"poster_image_url\" : \"{{newPosterImageUrl}}\",\r\n\t\"title\" : \"{{newTitle}}\",\r\n\t\"caption\": \"{{newCaption}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/photos/{{photoId}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"photos",
								"{{photoId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "Add Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE STATUS 201\", () => {\r",
									"\tpm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"comment\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"PhotoId\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"UserId\");\r",
									"\r",
									"\tpm.environment.set(\"commentId\", responseJson.id);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comment\": \"{{commentRequest}}\",\r\n    \"PhotoId\": {{photoidRequest}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/comments",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"comments\");\r",
									"\r",
									"\tpm.expect(responseJson.comments).to.be.an(\"array\");\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI COMMENTS RESPONSE SESUAI, COMMENT, PHOTO, USER\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tconst comment = responseJson.comments[0];\r",
									"\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"comment\");\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"UserId\");\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"PhotoId\");\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"createdAt\");\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"updatedAt\");\r",
									"\r",
									"\tpm.expect(comment).to.haveOwnProperty(\"photo\");\r",
									"\tconst photo = comment.photo;\r",
									"\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"title\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"caption\");\r",
									"\tpm.expect(photo).to.haveOwnProperty(\"poster_image_url\");\r",
									"    \r",
									"    pm.expect(comment).to.haveOwnProperty(\"user\");\r",
									"\tconst user = comment.user;\r",
									"\r",
									"\tpm.expect(user).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"username\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"profile_image_url\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"phone_number\");\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/comments",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE STATUS 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"comment\");\r",
									"\r",
									"\tconst comment = responseJson.comment;\r",
									"\tpm.expect(comment.id).to.equals(pm.environment.get(\"commentId\"));\r",
									"\tpm.expect(comment.comment).to.equals(pm.environment.get(\"newComment\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comment\": \"{{newComment}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/comments/{{commentId}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"comments",
								"{{commentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"RESPONSE BODY MESSAGE\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson.message).to.equals('Your comment has been successfully deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/comments/{{commnetId}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"comments",
								"{{commnetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Socialmedia",
			"item": [
				{
					"name": "socialmedia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE STATUS 201\", () => {\r",
									"\tpm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"name\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"social_media_url\");\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"UserId\");\r",
									"\r",
									"\tpm.environment.set(\"socialmediaId\", responseJson.id);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{socialMediaNameRequest}}\",\r\n    \"social_media_url\": \"{{socialMediaUrlRequest}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/socialmedias",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"socialmedias"
							]
						}
					},
					"response": []
				},
				{
					"name": "socialmedia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"socialmedias\");\r",
									"\r",
									"\tpm.expect(responseJson.socialmedias).to.be.an(\"array\");\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SOCIALMEDIAS RESPONSE SESUAI, SOCIALMEDIA, USER\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tconst socialmedia = responseJson.socialmedia[0];\r",
									"\r",
									"\tpm.expect(socialmedia).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(socialmedia).to.haveOwnProperty(\"name\");\r",
									"\tpm.expect(socialmedia).to.haveOwnProperty(\"social_media_url\");\r",
									"\tpm.expect(socialmedia).to.haveOwnProperty(\"UserId\");\r",
									"\tpm.expect(socialmedia).to.haveOwnProperty(\"createdAt\");\r",
									"\tpm.expect(socialmedia).to.haveOwnProperty(\"updatedAt\");\r",
									"    \r",
									"    pm.expect(socialmedia).to.haveOwnProperty(\"user\");\r",
									"\tconst user = socialmedia.user;\r",
									"\r",
									"\tpm.expect(user).to.haveOwnProperty(\"id\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"username\");\r",
									"\tpm.expect(user).to.haveOwnProperty(\"profile_image_url\");\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/socialmedias",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"socialmedias"
							]
						}
					},
					"response": []
				},
				{
					"name": "socialmedia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RESPONSE STATUS 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"PROPERTI SESUAI\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson).to.haveOwnProperty(\"socialmedia\");\r",
									"\r",
									"\tconst socialmedia = responseJson.socialmedia;\r",
									"\tpm.expect(socialmedia.id).to.equals(pm.environment.get(\"socialmediaId\"));\r",
									"\tpm.expect(socialmedia.name).to.equals(pm.environment.get(\"newSocialMediaName\"));\r",
									"\tpm.expect(socialmedia.social_media_url).to.equals(pm.environment.get(\"newSocialMediaUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{newSocialMediaName}}\",\r\n    \"social_media_url\": \"{{newSocialMediaUrl}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_URL}}/socialmedias/{{socialmediaId}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"socialmedias",
								"{{socialmediaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "socialmedia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE 200\", () => {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"RESPONSE BODY MESSAGE\", () => {\r",
									"\tconst responseJson = pm.response.json();\r",
									"\r",
									"\tpm.expect(responseJson.message).to.equals('Your socialmedia has been successfully deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SERVER_URL}}/socialmedias/{{socialmediaId}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"socialmedias",
								"{{socialmediaId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "SERVER_URL",
			"value": "localhost:7050/api",
			"type": "string"
		}
	]
}